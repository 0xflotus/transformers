name: Doctests

on:
  push:
    branches:
      - doctest*
  repository_dispatch:
  pull_request:
    paths:
      - "src/**"
      - "tests/**"
      - ".github/**"
      - "templates/**"
      - "docs/**"
    types: [assigned, opened, synchronize, reopened]
#  schedule:
#    - cron: "0 0 * * *"


env:
  HF_HOME: /mnt/cache
  TRANSFORMERS_IS_CI: yes
  RUN_SLOW: yes
  OMP_NUM_THREADS: 16
  MKL_NUM_THREADS: 16
  PYTEST_TIMEOUT: 600
  SIGOPT_API_TOKEN: ${{ secrets.SIGOPT_API_TOKEN }}
  TF_FORCE_GPU_ALLOW_GROWTH: true

jobs:
  run_doctests:
    runs-on: [self-hosted, doc-tests-gpu]
    container:
      image: huggingface/transformers-all-latest-gpu
      options: --gpus 0 --shm-size "16gb" --ipc host -v /mnt/cache/.cache/huggingface:/mnt/cache/
    steps:
      - name: Remove transformers
        working-directory: ./
        run: 
          rm -rf transformers

      - uses: actions/checkout@v2
        with:
          repository: 'huggingface/transformers'
          path: transformers

      - name: Update clone
        working-directory: /transformers
        run: |
          git rev-parse HEAD
          echo ${{ github.sha }}

      - name: NVIDIA-SMI
        run: |
          nvidia-smi

      - name: GPU visibility
        working-directory: /transformers
        run: |
          utils/print_env_pt.py
          TF_CPP_MIN_LOG_LEVEL=3 python3 -c "import tensorflow as tf; print('TF GPUs available:', bool(tf.config.list_physical_devices('GPU')))"
          TF_CPP_MIN_LOG_LEVEL=3 python3 -c "import tensorflow as tf; print('Number of TF GPUs available:', len(tf.config.list_physical_devices('GPU')))"

      - name: Prepare files for doctests
        run: |
          python3 utils/prepare_for_doc_test.py src docs

      - name: Run doctests
        run: |
          python3 -m pytest --doctest-modules $(cat utils/documentation_tests.txt) -sv --doctest-continue-on-failure --doctest-glob="*.mdx"

      - name: Clean files after doctests
        run: |
          python3 utils/prepare_for_doc_test.py src docs --remove_new_line
